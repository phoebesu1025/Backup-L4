@keyframes simple-animation { 

  /*Define the animation - using keyframes*/
0% {background-color: purple;
    left:0; top:0;}
    /*top left*/

25% {background-color:lightseagreen;
        left:200px;top:0px;}
    /*top right*/

 50% {background-color:pink;
        left:200px;top:200px;}
    /*bottom right*/

75% {background-color:lightblue;
        left:0px;top:200px;}
    /*bottom left*/

100% {background-color:yellow;
        left:0px;top:0px;}
    /*top left*/
} */

div {
    width: 100px;
    height: 100px;
    background-color: blue;
    position:relative;
    font-size:10px;


/* Makes the div move relative to its normal position (top left) */

/*Adding the animation to the element*/
    animation-name: simple-animation;
    animation-duration: 4s;

    animation-timing-function: linear;
    /*play animation at same speed through out*/

    animation-iteration-count:1;
    animation-direction:normal;
    
/*animation-fill-mode:none--Default*/
    animation-fill-mode: forwards; /*Takes the value from the last keyframe*/ 
    /*forwards stay on the last animation*/
    /*backwards, takes the value from the first keyframe immediately before starts. Used along with animation-delay.?*/
}

/*Poistion:absolute 只在webpage整個範圍
h1 {
    Changes the default posisitioning of the element in the page 
    position: aboslute;
    bottom: 50px;
    right: 50px;
} 
*/


/*
h1 {
    position:relative;
    top:50px;
    left: 50px;
}*/

/* Animation property */
button {
    background-color: #444;
    color: white;
    padding: 20px 50px;
    font-size: larger;
    border-top: 10px solid orange;
    border-radius: 5px;
    animation: wiggle 2s linear infinite;
    /* animation shorthand prop 
      animation-name: wiggle;
      animation-duration: 2s;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    */
  }
  /* Keyframes */
  @keyframes wiggle {
    0%,
    7% {
      transform: rotateZ(0);
    }
    15% {
      transform: rotateZ(-15deg);
    }
    20% {
      transform: rotateZ(10deg);
    }
    25% {
      transform: rotateZ(-10deg);
    }
    30% {
      transform: rotateZ(6deg);
    }
    35% {
      transform: rotateZ(-4deg);
    }
    40%,
    100% {
      transform: rotateZ(0);
    }
  }